<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="com.smhrd.database.MemberMapper">
  <!-- 회원가입 쿼리문 -->
  <insert id = "join" parameterType = "com.smhrd.model.userVO">
  	insert into tb_member (mb_id, mb_pw, mb_name, mb_nick)
  	values(#{mb_id}, #{mb_pw}, #{mb_name}, #{mb_nick})
  </insert>
  
  <!-- 로그인 쿼리문 -->
  <select id="login" parameterType="com.smhrd.model.userVO"
  	      resultType="com.smhrd.model.userVO">
  	select mb_id, mb_pw, mb_name, mb_nick from tb_member
  	where mb_id = #{mb_id}
  	and mb_pw = #{mb_pw}
  </select>
  



  <!-- 메인화면으로 이동할때마다 실행되어야 하는 쿼리문 -->
  <select id="main" parameterType="com.smhrd.model.followVO"
  	      resultType="com.smhrd.model.mainVO">
	 select A.*, B.mb_pic, C.res_name, D.mb_name, D.mb_nick
	  from tb_review A
	     , tb_profile B
	     , tb_restaurant C
	     , tb_member D
	 where A.mb_id = B.mb_id
	   and A.res_seq = C.res_seq
	   and A.mb_id = D.mb_id
	   and A.rv_seq in (select rv_seq from tb_review	
	                 	where mb_id in ( select followee
	                    				   from tb_follow
	                        			  where follower = #{follower}))
	  order by A.rv_date desc
  </select>


  <!-- 좋아요를 누를때 저장이되는 쿼리문 -->
  <insert id = "likes" parameterType = "com.smhrd.model.likesVO">
  	insert into tb_likes (mb_id, rv_seq)
  	 values(#{mb_id}, #{rv_seq})
  </insert>

  <!-- 좋아요를 취소할 때 행을 지우는 쿼리문 -->
  <delete id = "dislikes" parameterType = "com.smhrd.model.likesVO">
  	delete from tb_likes
  	 where mb_id = #{mb_id}
  	 and   rv_seq = #{rv_seq})
  </delete>



  <select id="totalreply" resultType="com.smhrd.model.totalreplyVO">
     select A.*, B.mb_name, B.mb_nick, C.mb_pic
     from tb_reply A
        , tb_member B
        , tb_profile C
     where B.mb_id = C.mb_id
       and B.mb_id = A.mb_id
     order by rp_date desc
  </select>












  <!-- 가게이름으로 가게의번호를 찾아오는 쿼리문 -->
  <select id="search_res" parameterType="com.smhrd.model.restaurantVO"
  	      resultType="com.smhrd.model.restaurantVO">
  	select * from tb_restaurant
  	where res_name = #{res_name}
  </select>


  <!-- 검색을 하였을때 검색의 결과를 보여주는 쿼리문 (가게가 존재할때) -->
  <select id="user_search1" parameterType="com.smhrd.model.reviewVO"
  	      resultType="com.smhrd.model.reviewVO">
  	select * from tb_review
  	where mb_id = #{mb_id}
  	   or res_seq = #{res_seq}
  	   or rv_hashtag = #{rv_hashtag}
  </select>

  <!-- 검색을 하였을때 검색의 결과를 보여주는 쿼리문 (가게가 존재하지 않을 때) -->
  <select id="user_search2" parameterType="com.smhrd.model.reviewVO"
  	      resultType="com.smhrd.model.reviewVO">
  	select * from tb_review
  	where mb_id = #{mb_id}
  	   or rv_hashtag = #{rv_hashtag}
  </select>




















  <!-- 추천페이지에서 필요한 쿼리문들 -->
  
  <!-- 추천페이지에서 좋아요가 많은 순서로 게시물을 가져오는 쿼리문 -->
  <select id="ranking" resultType="com.smhrd.model.mainVO">
	select A.*, B.mb_pic, C.res_name, D.mb_name, D.mb_nick
	  from tb_review A
	     , tb_profile B
	     , tb_restaurant C
	     , tb_member D
	     , ( select rv_seq, count(*) AS CNT 
	           from tb_likes
	          where like_date BETWEEN sysdate-10 and sysdate
	          group by rv_seq
	          order by count(*) desc) E
	 where A.mb_id = B.mb_id
	   and A.res_seq = C.res_seq
	   and A.mb_id = D.mb_id
	   and A.rv_seq = E.rv_seq
	 order by E.CNT desc
  </select>

  <!-- 추천페이지에서 카테고리별 게시물을 가져오는 쿼리문 -->
  <select id="show1" resultType="com.smhrd.model.mainVO">
	select A.*, B.res_name
	  from tb_review A
	      , tb_restaurant B
	 where A.res_seq = B.res_seq
	   and A.res_seq = (select *
	                    from (select *
	                            from (select distinct res_seq
	                                    from tb_review
	                                   where rv_hashtag = '한식'
	                                   order by dbms_random.value)
	                           order by rownum)
	                   where rownum = 1 )
	 order by dbms_random.value
  </select>

  <select id="show2" resultType="com.smhrd.model.mainVO">
	select A.*, B.res_name
	  from tb_review A
	      , tb_restaurant B
	 where A.res_seq = B.res_seq
	   and A.res_seq = (select *
	                    from (select *
	                            from (select distinct res_seq
	                                    from tb_review
	                                   where rv_hashtag = '중식'
	                                   order by dbms_random.value)
	                           order by rownum)
	                   where rownum = 1 )
	 order by dbms_random.value
  </select>

  <select id="show3" resultType="com.smhrd.model.mainVO">
	select A.*, B.res_name
	  from tb_review A
	      , tb_restaurant B
	 where A.res_seq = B.res_seq
	   and A.res_seq = (select *
	                    from (select *
	                            from (select distinct res_seq
	                                    from tb_review
	                                   where rv_hashtag = '일식'
	                                   order by dbms_random.value)
	                           order by rownum)
	                   where rownum = 1 )
	 order by dbms_random.value
  </select>

  <select id="show4" resultType="com.smhrd.model.mainVO">
	select A.*, B.res_name
	  from tb_review A
	      , tb_restaurant B
	 where A.res_seq = B.res_seq
	   and A.res_seq = (select *
	                    from (select *
	                            from (select distinct res_seq
	                                    from tb_review
	                                   where rv_hashtag = '카페'
	                                   order by dbms_random.value)
	                           order by rownum)
	                   where rownum = 1 )
	 order by dbms_random.value
  </select>



















  <!-- 보관페이지(지도)에서 필요한 쿼리문들 -->
  
  <!-- 유저 개인 보관함리뷰 데이터  -->
  <select id="userReview" parameterType="com.smhrd.model.userMapVO"
  	      resultType="com.smhrd.model.reviewVO">
	SELECT * FROM TB_REVIEW
  	WHERE RV_SEQ IN (SELECT RV_SEQ
  					   FROM TB_USERPICK
  					  WHERE MB_ID = #{MB_ID})
  </select>
  
  <!-- 유저 개인 보관함 데이터  -->
  <select id="userMap" parameterType="com.smhrd.model.userMapVO"
  	      resultType="com.smhrd.model.restaurantVO">
	SELECT * FROM TB_RESTAURANT
  	WHERE RES_SEQ IN (SELECT RES_SEQ
  					   FROM TB_USERPICK
  					  WHERE MB_ID = #{MB_ID})
  </select>
  

















  <!-- 게시글을 작성하는데 필요한 쿼리문들 -->
  
  <!-- 게시글을 작성하여 저장하는 쿼리문 -->
  <insert id = "make" parameterType = "com.smhrd.model.reviewVO">
  	insert into tb_review(
  		rv_content,
  		rv_ratings,
  		mb_id,
  		res_seq,
  		rv_hashtag
  	) values (
  		#{rv_content},
  		#{rv_ratings},
  		#{mb_id},
  		#{res_seq},
  		#{rv_hashtag}
  	)
  </insert>
  
  <!-- 댓글을 작성하여 저장하는 쿼리문 -->
  <insert id = "reply" parameterType = "com.smhrd.model.replyVO">
  	insert into tb_reply(
  		rv_seq,
  		rp_content,
  		mb_id
  	) values (
  		#{rv_seq},		
  		#{rp_content},
  		#{mb_id}
  	)
  </insert>
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- 게시글을 키웠을때(or 작성을 작성하기위한 페이지를 열때) 필요한 쿼리문들 -->

  <!-- 해당 게시글의 리뷰데이터들 가져오는 쿼리문 -->
  <select id="reviewpage" parameterType="com.smhrd.model.replyVO"
  	      resultType="com.smhrd.model.reviewpageVO">
	select A.*, B.res_seq, C.mb_name, C.mb_nick, D.mb_profile, D.mb_pic
	  from tb_review A
	     , tb_restaurant B
	     , tb_member C
	     , tb_profile D
	 where A.res_seq = B.res_seq
	   and A.mb_id = C.mb_id
	   and A.mb_id = D.mb_id
	   and A.rv_seq = #{rv_seq}
  </select>

  <!-- 해당 게시글의 댓글데이터들 가져오는 쿼리문 -->
  <select id="replypage" parameterType="com.smhrd.model.replyVO"
  	      resultType="com.smhrd.model.reviewpageVO">
	select A.*, B.mb_name, B.mb_nick, C.mb_pic
	  from tb_reply A
	     , tb_member B
	     , tb_profile C
	 where A.mb_id = B.mb_id
	   and A.mb_id = C.mb_id
	   and A.rv_seq = #{rv_seq}
	 order by rp_date
  </select>


















  <!-- 프로필페이지에서 필요한 쿼리문들 -->

  <!-- 프로필페이지에서 필요한 쿼리문들 -->

  <!-- 프로필페이지에 필요한 데이터 가져오는 쿼리문 -->
  <select id="profilepage" parameterType="com.smhrd.model.userVO"
           resultType="com.smhrd.model.userinfoVO">
   select A.rv_seq, A.rv_pic1, B.mb_profile, B.mb_pic, C.*
     from tb_review A
        , tb_profile B
        , tb_member C
    where C.mb_id = B.mb_id
      and C.mb_id = A.mb_id
      and C.mb_id = #{mb_id}
    order by A.rv_date desc
  </select>


























  <!-- 해당 게시글에 작성되어 있는 댓글들의 데이터를 가져오는 쿼리문 -->
  <select id="search4" parameterType="com.smhrd.model.replyVO"
  	      resultType="com.smhrd.model.replyVO"
  >
  	select * from tb_reply
  	where rv_seq = #{rv_seq}
  </select>







  <!-- 해당 게시물의 유저를 팔로우하는 쿼리문 -->
  <insert id = "follow_insert" parameterType = "com.smhrd.model.followVO">
  	insert into tb_follow (follower, followee)
  	 values(#{follower}, #{followee})
  </insert>

  <!-- 해당 게시물의 유저의 팔로우를 해제하는 쿼리문 -->
  <delete id = "follow_delete" parameterType = "com.smhrd.model.followVO">
  	delete from tb_follow
  	 where follower = #{follower}
  	 and   followee = #{followee})
  </delete>

  <!-- 추천페이지에서 좋아요가 많은 순서를 가져오는 쿼리문 -->
  <select id="rank" resultType="com.smhrd.model.likesVO"
  >
 select rv_seq
   from(select rv_seq, count(*)
  	  	  from tb_likes
    	 where like_date BETWEEN sysdate-5 and sysdate
         group by rv_seq
         order by count(*) desc)
  </select>

  <!-- 추천페이지 리뷰번호로 리뷰정보 보여주는 쿼리문 -->
  <select id="show" parameterType="com.smhrd.model.reviewVO"
  	      resultType="com.smhrd.model.reviewVO"
  >
  	select * from tb_review
  	where rv_seq = #{res_seq}
  </select>














  <!-- 유저의 프로필사진을 가져오는 쿼리문 -->
  <select id="profilepic" parameterType="com.smhrd.model.profileVO"
  	      resultType="com.smhrd.model.profileVO"
  >
  	select * from tb_profile
  	where mb_id = #{mb_id}
  </select>

  <!-- 한개의 게시물의 데이터만 가져오는 쿼리문 -->
  <select id="reviewOpen" parameterType="com.smhrd.model.reviewVO"
  	      resultType="com.smhrd.model.reviewVO"
  >
  	select * from tb_reivew
  	where rv_seq = #{rv_seq}
  </select>



  <!-- 프로필페이지 로그인유저의 리뷰정보 보여주는 쿼리문 -->
  <select id="myreview" parameterType="com.smhrd.model.userVO"
  	      resultType="com.smhrd.model.reviewVO"
  >
  	select * from tb_review
  	where mb_id = #{mb_id}
  </select>



















  
   <!-- 회원정보수정 쿼리문 -->  
  <update id="update" parameterType="com.smhrd.model.userVO">
  	update tb_member set mb_pw=#{mb_pw}, mb_name=#{mb_name}, mb_nick=#{mb_nick} 
  	where mb_id=#{mb_id} 
  </update>
  
  
  
  
  
  
  
</mapper>